  1  sudo

    2  sudo ls

    3  apt-install sl

    4  sudo apt-install sl

    5  sudo apt-get sl

    6  sudo apt-get install sl

    7  sl

    8  sudo apt-get install nettools

    9  sudo apt-get install net-tools

   10  ipconfig

   11  ifconfig

   12  sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

   13  # Add Docker's official GPG key:

   14  sudo apt-get update

   15  sudo apt-get install ca-certificates curl

   16  sudo install -m 0755 -d /etc/apt/keyrings

   17  sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc

   18  sudo chmod a+r /etc/apt/keyrings/docker.asc

   19  # Add the repository to Apt sources:

   20  echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \

   21    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" |   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

   22  sudo apt-get update

   23  sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

   24  sudo docker run hello-world

   25  docker ps

   26  sudo docker ps

   27  su

   28  su -S password123

   29  sudo passwd

   30  su

   31  cd programming/

   32  python3 app.py 

   33  locale

   34  sudo apt install software-properties-common

   35  sudo add-apt-repository universe

   36  sudo apt update && sudo apt install curl -y

   37  sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg

   38  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null

   39  sudo apt update && sudo apt install ros-dev-tools

   40  python --version

   41  python3 --version

   42  sudo apt update

   43  sudo apt upgrade

   44  sudo apt install ros-jazzy-desktop

   45  sudo apt install libudev-dev

   46  mkdir -p ws/src

   47  cd ws/src

   48  git clone git@github.com:ngmor/unitree_camera.git

   49  vcs import --input unitree_camera/unitree_camera.repos

   50  cd ..

   51  colcon build

   52  ls

   53  pip install pygame

   54  python3 app.py 

   55  pip

   56  sudo apt install python3-pip

   57  colcon

   58  su

   59  colcon build

   60  ls

   61  cd xs

   62  cd ws

   63  ls

   64  su

   65  cd

   66  pip install pygame

   67  locale  # check for UTF-8

   68  sudo apt update && sudo apt install locales

   69  sudo locale-gen en_US en_US.UTF-8

   70  sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8

   71  export LANG=en_US.UTF-8

   72  locale  # verify settings

   73  sudo apt install software-properties-common

   74  sudo add-apt-repository universe

   75  sudo apt update && sudo apt install curl -y

   76  sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg

   77  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null

   78  sudo apt update

   79  sudo apt install ros-humble-desktop

   80  sudo apt install ros-dev-tools

   81  # Replace ".bash" with your shell if you're not using bash

   82  # Possible values are: setup.bash, setup.sh, setup.zsh

   83  source /opt/ros/humble/setup.bash

   84  ros2 run demo_nodes_cpp talker

   85  printenv | grep -i ROS

   86  source /opt/ros/humble/setup.bash

   87  ros2 run demo_nodes_py listener

   88  # Replace ".bash" with your shell if you're not using bash

   89  # Possible values are: setup.bash, setup.sh, setup.zsh

   90  source /opt/ros/humble/setup.bash

   91  printenv | grep -i ROS

   92  sudo apt update

   93  sudo apt install ros-humble-turtlesim

   94  ros2 pkg executables turtlesim

   95  ros2 run turtlesim turtlesim_node

   96  # Replace ".bash" with your shell if you're not using bash

   97  # Possible values are: setup.bash, setup.sh, setup.zsh

   98  source /opt/ros/humble/setup.bash

   99  echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc

  100  ros2 run turtlesim turtle_teleop_key --ros-args --remap turtle1/cmd_vel:=turtle2/cmd_vel

  101  # Replace ".bash" with your shell if you're not using bash

  102  # Possible values are: setup.bash, setup.sh, setup.zsh

  103  source /opt/ros/humble/setup.bash

  104  ros2 run turtlesim turtle_teleop_key

  105  # Replace ".bash" with your shell if you're not using bash

  106  # Possible values are: setup.bash, setup.sh, setup.zsh

  107  source /opt/ros/humble/setup.bash

  108  ros2 run turtlesim turtle_teleop_key

  109  sudo apt update

  110  sudo apt install ~nros-humble-rqt*

  111  rqt

  112  ros2 node info /my_turtle

  113  ros2 run turtlesim turtlesim_node

  114  ros2 node list

  115  ros2 run turtlesim turtlesim_node

  116  ros2 topic echo /turtle1/cmd_vel

  117  ros2 topic info /turtle1/cmd_vel

  118  ros2 interface show geometry_msgs/msg/Twist

  119  ros2 topic pub --once /turtle1/cmd_vel geometry_msgs/msg/Twist "{linear: {x: 2.0, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: 1.8}}"

  120  ros2 topic pub --rate 1 /turtle1/cmd_vel geometry_msgs/msg/Twist "{linear: {x: 2.0, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: 1.8}}"

  121  ros2 topic hz /turtle1/pose

  122  ros2 node list

  123  clear

  124  rqt_graph

  125  rqt_graph

  126  clear

  127  ros2 service type /clear

  128  ros2 service list -t

  129  ros2 service find std_srvs/srv/Empty

  130  ros2 interface show std_srvs/srv/Empty

  131  ros2 interface show turtlesim/srv/Spawn

  132  ros2 service call /clear std_srvs/srv/Empty

  133  ros2 service call /spawn turtlesim/srv/Spawn "{x: 2, y: 2, theta: 0.2, name: ''}"

  134  clear

  135  ros2 param list

  136  ros2 param set /turtlesim background_r 150

  137  ros2 param dump /turtlesim > turtlesim.yaml

  138  ros2 param load /turtlesim turtlesim.yaml

  139  ros2 action send_goal /turtle1/rotate_absolute turtlesim/action/RotateAbsolute "{theta: 1.57}"

  140  ros2 action send_goal /turtle1/rotate_absolute turtlesim/action/RotateAbsolute "{theta: -1.57}" --feedback

  141  ros2 run rqt_console rqt_console

  142  ros2 run turtlesim turtlesim_node --ros-args --log-level WARN

  143  ros2 run rqt_console rqt_console

  144  ros2 topic pub  /turtlesim2/turtle1/cmd_vel geometry_msgs/msg/Twist "{linear: {x: 2.0, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: -1.8}}"

  145  mkdir bag_files

  146  cd bag_files

  147  ros2 bag record /turtle1/cmd_vel

  148  ros2 bag play subset

  149  ros2 bag record -o subset /turtle1/cmd_vel /turtle1/pose

  150  ros2 bag info subset

  151  ros2 bag play subset

  152  ros2 run turtlesim turtle_teleop_key

  153  ros2 run turtlesim turtlesim_node

  154  clear

  155  ros2 run turtlesim turtlesim_node

  156  ros2 run turtlesim turtlesim_node --ros-args --params-file turtlesim.yaml

  157  ros2 run turtlesim turtlesim_node --ros-args --log-level WARN

  158  ros2 launch turtlesim multisim.launch.py

  159  ros2 run turtlesim turtlesim_node

  160  ros2 topic pub -r 1 /turtle1/cmd_vel geometry_msgs/msg/Twist "{linear: {x: 2.0, y: 0.0, z: 0.0}, angular: {x: 0.0,y: 0.0,z: 0.0}}"

  161  ros2 run turtlesim turtle_teleop_key

  162  ros2 run turtlesim turtlesim_node --ros-args --remap __node:=my_turtle

  163  ros2 run turtlesim turtle_teleop_key

  164  clear

  165  ros2 run turtlesim turtle_teleop_key

  166  ros2 topic pub  /turtlesim1/turtle1/cmd_vel geometry_msgs/msg/Twist "{linear: {x: 2.0, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: 1.8}}"

  167  ros2 topic list

  168  ros2 topic echo /turtle1/cmd_vel

  169  ls

  170  mkdir robot

  171  cd robot/

  172  git clone https://github.com/unitreerobotics/UnitreecameraSDK.git

  173  cd UnitreecameraSDK/

  174  $ mkdir build && cd build;

  175  mkdir build && cd build;

  176  cmake ..

  177  sudo apt install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

  178  sudo apt-get install libavcodec-dev libavformat-dev libavutil-dev libswscale-dev

  179  sudo apt-get install gstreamer1.0-plugins-bad

  180  sudo apt-get install h264enc

  181  sudo apt-get install --yes libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio

  182  sudo apt-get install --yes libgirepository1.0-dev libgstrtspserver-1.0 libgstreamer1.0-dev

  183  cmake ..

  184  sudo apt install libopencv-dev

  185  sudo apt-get install libglew-dev libglfw3-dev libglm-dev

  186  cmake ..

  187  sudo apt-get install mesa-utils libglu1-mesa-dev freeglut3-dev mesa-common-dev

  188  cmake ..

  189  $ sudo apt install libopencv-dev

  190  sudo apt install libopencv-dev

  191  $ sudo apt-get install mesa-utils libglu1-mesa-dev freeglut3-dev mesa-common-dev libglew-dev libglfw3-dev libglm-dev libao-dev libmpg123-dev

  192  sudo apt-get install mesa-utils libglu1-mesa-dev freeglut3-dev mesa-common-dev libglew-dev libglfw3-dev libglm-dev libao-dev libmpg123-dev

  193  cd ..

  194  ls

  195  cd bins/

  196  ls

  197  cd ..

  198  mkdir build && cd build;

  199  cd build/

  200  cmake ..

  201  make

  202  cd ..

  203  ./bins/example_putImagetrans 

  204  ./bins/example_getimagetrans 

  205  sudo apt install python3-colcon-common-extensions

  206  mkdir -p ~/ros2_ws/src

  207  cd ~/ros2_ws

  208  ls

  209  git clone https://github.com/ros2/examples src/examples -b humble

  210  colcon build --symlink-install

  211  ls

  212  colcon test

  213  source install/setup.bash

  214  ros2 run examples_rclcpp_minimal_subscriber subscriber_member_function

  215  ros2 run examples_rclcpp_minimal_publisher publisher_member_function

  216  clear

  217  source /opt/ros/humble/setup.bash

  218  ls

  219  cd ros2_ws/

  220  cd src/

  221  ls

  222  git clone https://github.com/ros/ros_tutorials.git -b humble

  223  ls

  224  # cd if you're still in the ``src`` directory with the ``ros_tutorials`` clone

  225  cd ..

  226  rosdep install -i --from-path src --rosdistro humble -y

  227  sudo rosdep init

  228  rosdep update

  229  rosdep install -i --from-path src --rosdistro humble -y

  230  sudo ip a add 192.168.123.162/24 dev enp46s0

  231  ip a

  232  sudo ip a add 192.168.123.162/24 dev enp0s3

  233  ip a

  234  ssh unitree@192.168.123.13

  235  ip a

  236  sudo ip a add 192.168.123.162/24 dev enp46s0

  237  sudo ip a add 192.168.123.162/24 dev enp0s3

  238  ip a

  239  ssh unitree@192.168.123.13

  240  ip a

  241  sudo ip a add 192.168.123.162/24 dev enp0s3

  242  ip a

  243  ssh unitree@192.168.123.13

  244  exit

  245  ls

  246  ls Documents/

  247  ls robot/

  248  cd robot/

  249  cd UnitreecameraSDK/

  250  ls

  251  ./bins/example_getimagetrans 

  252  ls

  253  nano trans_rect_config.yaml 

  254  cat trans_rect_config.yaml 

  255  ls

  256  cd build/

  257  ls

  258  cd ..

  259  ls

  260  cd bins/

  261  ls

  262  nano example_getimagetrans 

  263  cd ..

  264  ls

  265  $ ps -aux | grep point_cloud_node

  266  $ ps -aux | grep mqttControlNode

  267  $ ps -aux | grep live_human_pose

  268  ps -aux | grep live_human_pose

  269  ps -aux | grep mqttControlNode

  270  ps -aux | grep point_cloud_node

  271  ls

  272  cd examples/

  273  ls

  274  nano example_getimagetrans.cc 

  275  ls

  276  cd ..

  277  ls 

  278  rm -rf build/

  279  mkdir build && cd build

  280  cmake ..

  281  make

  282  cd ..

  283  ls

  284  ./bins/example_getimagetrans 

  285  exit

  286  python3 app.py 

  287  ls

  288  cd robot/UnitreecameraSDK/

  289  ls

  290  rm -rf build/

  291  mkdir build && cd build

  292  cmake ..

  293  make

  294  ls

  295  cd ..

  296  ls bins/

  297  cd ..

  298  ls

  299  cd UnitreecameraSDK/

  300  ld

  301  ls

  302  nano CMakeLists.txt 

  303  ls

  304  cd examples/

  305  ls

  306  nano CMakeLists.txt 

  307  cat CMakeLists.txt 

  308  cd ..

  309  ls

  310  rm -rf build/

  311  ls

  312  mkdir build && cd build

  313  cmake ..

  314  make

  315  cd ..

  316  ls

  317  ./bins/example_savevideo 

  318  ls

  319  ./bins/example_savevideo 

  320  ls

  321  cd..

  322  cd ..

  323  ls

  324  ip a

  325  sudo ip a add 192.168.123.162/24 dev enp46s0

  326  sudo ip a add 192.168.123.162/24 dev enp0s3

  327  ip a

  328  ssh unitree@192.168.123.13

  329  ip a

  330  sudo ip a add 192.168.123.162/24 dev enp0s3

  331  ssh unitree@192.168.123.13

  332  ls

  333  ip a

  334  sudo ip a add 192.168.123.162/24 dev enp0s3

  335  ssh unitree@192.168.123.13

  336  python3 streamer.py 

  337  python3 app.py 

  338  pip install ultralytics

  339  cd Documents/

  340  cd programming/

  341  python3 streamer.py 

  342  ls

  343  opencv --version

  344  pf -H

  345  df -H

  346  sudo ip a add 192.168.123.162/24 dev enp0s3

  347  ssh unitree@192.168.123.13

  348  exit

  349  python3 streamer.py 

  350  ph -h

  351  dh -h

  352  df -h

  353  df -H

  354  history > commands.txt

  355  cat commands.txt 

  356  df -H

  357  l

  358  ls

  359  python3 streamer.py 

  360  cd ..

  361  ls

  362  cd Documents/

  363  ls

  364  cd programming/

  365  ls

  366  cd ..

  367  cd robot/

  368  ls

  369  cd UnitreecameraSDK/

  370  ls

  371  ./bins/example_getimagetrans 

  372  sudo apt purge ultralytics

  373  ls

  374  cd ..

  375  ls

  376  cd Documents/

  377  ls

  378  cd programming/

  379  ls

  380  nano streamer.py 

  381  python3 streamer.py 

  382  pip uninstall python-opencv

  383  pip uninstall opencv

  384  pip uninstall cv2

  385  pip list

  386  pip list | grep cv

  387  pip uninstall opencv-python

  388  pip install opencv-python

  389  pip uninstall opencv-python

  390  pip install opencv-python=4.5.4

  391  pip install opencv-python=4.5.4.60

  392  pip install opencv-python=4.1.1

  393  pip install opencv-python==4.1.1

  394  pip install opencv-python==4.5.4.60

  395  python -c "import cv2;print(cv2.getBuildInformation())" | grep GStreamer

  396  python3 -c "import cv2;print(cv2.getBuildInformation())" | grep GStreamer

  397  python3 -c "import cv2;print(cv2.--version--)"

  398  python3 -c "import cv2;print(cv2.getBuildInformation())" 

  399  sudo apt-get install --quiet -y --no-install-recommends   gstreamer1.0-gl   gstreamer1.0-opencv   gstreamer1.0-plugins-bad   gstreamer1.0-plugins-good   gstreamer1.0-plugins-ugly   gstreamer1.0-tools   libgstreamer-plugins-base1.0-dev   libgstreamer1.0-0   libgstreamer1.0-dev \

  400  python -c "import cv2;print(cv2.getBuildInformation())" | grep GStreamer

  401  python3 -c "import cv2;print(cv2.getBuildInformation())" | grep GStreamer

  402  pip uninstall cv-bridge

  403  pip uninstall opencv-python

  404  apt list

  405  apt list | grep opencv

  406  apt purge $(apt list | grep opencv)

  407  sudo apt purge $(apt list | grep opencv)

  408  sudo apt purge opencv

  409  sudo apt purge opencv-python

  410  sudo apt purge python-opencv

  411  pip list | grep opecv

  412  python3 -c "import cv2;print(cv2.getBuildInformation())" | grep GStreamer

  413  ls

  414  python3 streamer.py 

  415  python3 -c "import cv2;print(cv2.getBuildInformation())" | grep GStreamer

  416  python3 streamer.py 

  417  pip list

  418  pip list |grep ultra

  419  python3 detection.py 

  420  python3 streamer.py 

  421  history

  422  python3 streamer.py 

  423  python3 -c "import cv2;print(cv2.getBuildInformation())"

  424  python3 streamer.py 

  425  python3 detection.py 

  426  python3 streamer.py 

  427  history > history.txt

